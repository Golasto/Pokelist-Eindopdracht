[{"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\index.js":"1","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\reportWebVitals.js":"2","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\App.js":"3","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\authProvider.js":"4","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\navbar.js":"5","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\home.js":"6","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\loginForm.js":"7","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\registerForm.js":"8","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\search.js":"9","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\logoutform.js":"10","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\list-download.js":"11","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\pokemondetails.js":"12","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\favorite.js":"13","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\scripts\\cookies.js":"14","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\AuthProvider.js":"15","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Home.js":"16","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\LogoutForm.js":"17","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\RegisterForm.js":"18","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\Navbar.js":"19","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\LoginForm.js":"20","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Search.js":"21","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\List-Download.js":"22","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\PokemonDetails.js":"23","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Favorite.js":"24","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\scripts\\Cookies.js":"25","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\AuthContext.js":"26"},{"size":1185,"mtime":1675176954397,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1672246890592,"results":"29","hashOfConfig":"28"},{"size":1900,"mtime":1675178142991,"results":"30","hashOfConfig":"28"},{"size":2707,"mtime":1675176789837,"results":"31","hashOfConfig":"28"},{"size":880,"mtime":1675173965582,"results":"32","hashOfConfig":"28"},{"size":784,"mtime":1675174123968,"results":"33","hashOfConfig":"28"},{"size":2313,"mtime":1675173965599,"results":"34","hashOfConfig":"28"},{"size":2228,"mtime":1675174866644,"results":"35","hashOfConfig":"28"},{"size":3554,"mtime":1675174123890,"results":"36","hashOfConfig":"28"},{"size":463,"mtime":1675173965565,"results":"37","hashOfConfig":"28"},{"size":3100,"mtime":1675174123921,"results":"38","hashOfConfig":"28"},{"size":10113,"mtime":1675174123952,"results":"39","hashOfConfig":"28"},{"size":2949,"mtime":1675174123853,"results":"40","hashOfConfig":"28"},{"size":454,"mtime":1673203274919,"results":"41","hashOfConfig":"28"},{"size":2707,"mtime":1675176789837,"results":"42","hashOfConfig":"28"},{"size":784,"mtime":1675174123968,"results":"43","hashOfConfig":"28"},{"size":463,"mtime":1675173965565,"results":"44","hashOfConfig":"28"},{"size":4142,"mtime":1675180416889,"results":"45","hashOfConfig":"28"},{"size":880,"mtime":1675173965582,"results":"46","hashOfConfig":"28"},{"size":3365,"mtime":1675179696445,"results":"47","hashOfConfig":"28"},{"size":3554,"mtime":1675174123890,"results":"48","hashOfConfig":"28"},{"size":3100,"mtime":1675174123921,"results":"49","hashOfConfig":"28"},{"size":10113,"mtime":1675174123952,"results":"50","hashOfConfig":"28"},{"size":2949,"mtime":1675174123853,"results":"51","hashOfConfig":"28"},{"size":454,"mtime":1673203274919,"results":"52","hashOfConfig":"28"},{"size":3024,"mtime":1675177592399,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7kjf91",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\index.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\reportWebVitals.js",[],["119","120"],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\App.js",["121","122"],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\authProvider.js",["123","124","125"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport  axios  from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nfunction AuthContextProvider({ children }) {\r\n    const [auth, toggleAuth] = useState({\r\n        isAuth: false,\r\n        user: {\r\n            username: null,\r\n            email: null,\r\n        }\r\n    });\r\nuseEffect(()=> {\r\n\r\n}, [])\r\n\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const key = localStorage.getItem('key')\r\n\r\n    function login() {\r\n        console.log('Gebruiker is ingelogd!');\r\n        toggleAuth({isAuth: true});\r\n    }\r\n\r\n    function logout() {\r\n        console.log('Gebruiker is uitgelogd!');\r\n        localStorage.setItem(\"key\",\"\")\r\n        toggleAuth({isAuth: false, user: {username: null, password: null}});\r\n    }\r\n\r\n    async function getData() {\r\n        const token = localStorage.getItem(\"key\")\r\n\r\n\r\n        try {\r\n            const response = await axios.get(\"https://frontend-educational-backend.herokuapp.com/api/user\",\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    }\r\n                })\r\n\r\n            if (token) {\r\n                const decoded = jwt_decode(token);\r\n                AuthContextProvider(decoded.sub, token);\r\n            } else {\r\n                toggleAuth({\r\n                    isAuth: false,\r\n                    user: null,\r\n                });\r\n            }\r\n            toggleAuth({ username: response.data.username, email: response.data.email, isAuth: true })\r\n            console.log(response.data)\r\n            setIsLoaded(true)\r\n        } catch (e) {\r\n            console.error(e.response)\r\n            setIsLoaded(true)\r\n        }\r\n    }\r\n\r\n    const contextData = {\r\n        isAuth: auth,\r\n        login: login,\r\n        logout: logout,\r\n        //getData: getData,\r\n    };\r\n\r\n    /*useEffect(() => {\r\n        if (key !== \"\" && key !== null)  {\r\n            getData();\r\n        } else {\r\n            setIsLoaded(true)\r\n        }\r\n    }, []) */\r\n\r\n    //if (!isLoaded) {\r\n       // return <div>Loading...</div>\r\n    //} if (isLoaded) {\r\n        return (\r\n            <AuthContext.Provider value={contextData}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        );\r\n    //}\r\n}\r\n\r\nexport default AuthContextProvider;","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\navbar.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\home.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\loginForm.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\registerForm.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\search.js",["126","127"],"import { useState, useEffect, useContext } from 'react';\r\nimport Nav from '../components/navbar';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport { AuthContext } from \"../context/authProvider\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nconst Search = () => {\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const navigate = useNavigate()\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    function getNames() {\r\n        const input = document.getElementById(\"searchbar\").value\r\n        const tempArr = [];\r\n        for (let i = 0; i < pokemonList.length; i++) {\r\n            document.getElementById(i).style.display = \"none\";\r\n            let pokemonName = pokemonList[i].name\r\n            if (pokemonName.includes(input)) {\r\n                tempArr.push(i)\r\n            }\r\n        }\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            document.getElementById(tempArr[i]).style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    async function setPokemonTypes(){\r\n        const typeValue = document.getElementById(\"types\").value;\r\n        let arr = []\r\n        if (typeValue === \"\") {\r\n            setPokemonList(pokemonNames)\r\n        } else {\r\n            const response = await fetch(API_URL + 'type/' + typeValue);\r\n            const data = await response.json()\r\n            const pokemonType = data.pokemon;\r\n            for (let i = 0; i < pokemonType.length; i++) {\r\n                arr.push(pokemonType[i].pokemon)\r\n            }\r\n            setPokemonList(arr)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                    setPokemonList(result.results)\r\n                }\r\n            )\r\n        fetch(API_URL + \"type?limit=18\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setTypes(result.results)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        if (pokemonNames.length !== 0) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [pokemonNames])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        console.log(types)\r\n        return (\r\n            <>\r\n                <div className='favorite-list'>\r\n                    <div className='searchContainer'>\r\n                        <input id=\"searchbar\" type=\"text\" placeholder='  Type hier je Pokemon...' onInput={() => getNames()}></input>\r\n                        <select id='types' onInput={() => setPokemonTypes()}>\r\n                            <option value=''>Select Type</option>\r\n                            {types.map((t, index) =>\r\n                                <option key={index} value={t.name}>{t.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    {pokemonList.map((p, index) =>\r\n                        <li id={index} key={index} className=\"pokemons\">\r\n                            <Link to={`../pokemondetails/${p.name}`} className='pokeNames'>{p.name}</Link>\r\n                        </li>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Search","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\logoutform.js",["128"],"import React, {useContext, useState,} from 'react';\r\nimport {AuthContext} from \"../context/authProvider\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const Logoutform = (props) => {\r\n    const data = useContext(AuthContext)\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <button className=\"logout-button\" onClick={() => {props.onFormSwitch('login'); navigate(\"/\"); data.logout() }}>Logout!</button>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\list-download.js",["129","130","131","132"],"import getCookie from \"../scripts/cookies\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/authProvider\";\r\n\r\nexport function ListDownload() {\r\n\r\n    const [file, setFile] = useState()\r\n    const fileReader = new FileReader()\r\n    const {setFileData} = useState([])\r\n    const navigate = useNavigate()\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    function setFav(cvalue) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + (24 * 60 * 60 * 1000));\r\n        let expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = \"FavPokemon=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (file) {\r\n            fileReader.onload = function (event) {\r\n                const csvOutput = event.target.result;\r\n                // eslint-disable-next-line no-unused-expressions\r\n                {setFileData}(csvOutput)\r\n                setFav(csvOutput);\r\n            };\r\n            fileReader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    function downloadFile() {\r\n        let tempArr = [];\r\n        const favPokemons = getCookie(\"FavPokemon\");\r\n        const split = favPokemons.split(\",\");\r\n        for (let i = 0; i < split.length; i++) {\r\n            split[i] = split[i].replace(/\\[/g, \"\")\r\n        split[i] = split[i].replace(/\\]/g, \"\")\r\n            // eslint-disable-next-line\r\n            split[i] = split[i].replace(/\\\"/g, \"\")\r\n            split[i] = parseInt(split[i]);\r\n            tempArr.push(parseInt(split[i]))\r\n        }\r\n        let csv = \"\"\r\n        csv += tempArr.join(',');\r\n\r\n        let hiddenElement = document.createElement('a');\r\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\r\n        hiddenElement.target = '_blank'\r\n\r\n        hiddenElement.download = 'Fav Pokemon.csv';\r\n        hiddenElement.click();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='options'>\r\n        <div className='downloadCard'>\r\n            <p className='download-tekst'>\r\n                <span>Klaar met je lijst?</span> <span>Download hem Hier!</span></p>\r\n            <button onClick={() => downloadFile()} className='download-button'>Download</button>\r\n        </div>\r\n            <div className=\"uploadCard\">\r\n                <p className='upload-tekst'><span>Of upload hier</span> <span>een nieuwe lijst!</span></p>\r\n                <form className='uploadCard-buttons'>\r\n                    <input className='upload-button'\r\n                        type={\"file\"}\r\n                        id={\"csvFileInput\"}\r\n                        accept={\".csv\"}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <button className='submit-button'\r\n                        onClick={(e) => { handleOnSubmit(e); }}>Submit\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\pokemondetails.js",["133"],"import {useContext, useEffect, useState} from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport getCookie from \"../scripts/cookies\"\r\nimport { AuthContext } from \"../context/authProvider\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nexport default function PokemonDetails() {\r\n    const [details, setDetails] = useState([]);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evoChain, setEvoChain] = useState([]);\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    const navigate = useNavigate();\r\n    const pokemonName = useParams().name\r\n\r\n    function getId() {\r\n        for(let i = 0; i < pokemonNames.length; i++) {\r\n            if(pokemonNames[i].name === pokemonName) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkFav(cname, cvalue) {\r\n        let same = false;\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let tempArr = [];\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                if (currentCookie === cvalue) {\r\n                    same = true;\r\n                }\r\n                tempArr.push(currentCookie);\r\n                tempArr.push(parseInt(cvalue));\r\n                cvalue = JSON.stringify(tempArr);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                let tempArr = [];\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    if (split[i] === cvalue) {\r\n                        same = true;\r\n                    }\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n            }\r\n            return same;\r\n        }\r\n    }\r\n\r\n    function setFav(cname, cvalue) {\r\n        console.log(cvalue)\r\n        const d = new Date();\r\n        let same = false;\r\n        let msplit = false;\r\n        let mindex;\r\n        cvalue = parseInt(cvalue);\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let tempArr = [];\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                if (currentCookie === cvalue) {\r\n                    same = true;\r\n                }\r\n                tempArr.push(currentCookie);\r\n                tempArr.push(parseInt(cvalue));\r\n                cvalue = JSON.stringify(tempArr);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                let tempArr = [];\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    if (split[i] === cvalue) {\r\n                        mindex = i;\r\n                        msplit = true;\r\n                    }\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n                split.push(parseInt(cvalue))\r\n                if (msplit) {\r\n                    split.splice(mindex, 1);\r\n                    split.pop();\r\n                }\r\n                cvalue = JSON.stringify(split);\r\n            }\r\n        }\r\n        if (same) {\r\n            if (cvalue.length > 3) {\r\n                cvalue = \"\";\r\n            } else {\r\n\r\n            }\r\n        }\r\n        d.setTime(d.getTime() + (1 * 24 * 60 * 60 * 30));\r\n        let expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    function getData(pname) {\r\n        fetch(API_URL + \"pokemon/\" + pname)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDetails(result)\r\n                    console.log(\"test\")\r\n                    fetch(result.species.url)\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            (result) => {\r\n                                setSpecies(result)\r\n                                try {\r\n                                    fetch(result.evolution_chain.url)\r\n                                        .then(res => res.json())\r\n                                        .then(\r\n                                            (result) => {\r\n                                                setEvoChain(result)\r\n                                            }\r\n                                        )\r\n                                } catch (e) {\r\n                                    setEvoChain(null)\r\n                                }\r\n                            }\r\n                        )\r\n                }\r\n            )\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                }\r\n            )\r\n    }\r\n\r\n    function getEvolutions(evo, onload) {\r\n        const arr = [];\r\n        let pIndex;\r\n        if (evoChain !== null) {\r\n            if (evoChain.chain.species.name !== undefined) {\r\n                arr.push(evoChain.chain.species.name)\r\n                if (evoChain.chain.evolves_to[0] !== undefined) {\r\n                    if (evoChain.chain.evolves_to[0].species.name !== undefined) {\r\n                        arr.push(evoChain.chain.evolves_to[0].species.name)\r\n                        if (evoChain.chain.evolves_to[0].evolves_to[0] !== undefined) {\r\n                            if (evoChain.chain.evolves_to[0].evolves_to[0].species.name !== undefined) {\r\n                                arr.push(evoChain.chain.evolves_to[0].evolves_to[0].species.name)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else{\r\n            return 0\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (pokemonName === arr[i]) {\r\n                pIndex = i;\r\n            }\r\n        }\r\n        if (evo) {\r\n            if (pIndex !== 0) {\r\n                if (!onload) {\r\n                    navigate(`../pokemondetails/${arr[pIndex - 1]}`)\r\n                    setIsLoaded(false)\r\n                    getData(arr[pIndex - 1]);\r\n                }\r\n                return 1\r\n            }\r\n            } else if (!evo) {\r\n                if (pIndex !== arr.length - 1) {\r\n                    if (!onload) {\r\n                        navigate(`../pokemondetails/${arr[pIndex + 1]}`)\r\n                        setIsLoaded(false)\r\n                        getData(arr[pIndex + 1]);\r\n                    }\r\n                    return 2\r\n                }\r\n            }\r\n        return 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        getData(pokemonName);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (evoChain !== null) {\r\n            if (details.length !== 0 && evoChain.length !== 0) {\r\n                setIsLoaded(true);\r\n            }\r\n        } else {\r\n            if (details.length !== 0) {\r\n                setIsLoaded(true);\r\n            }\r\n        }\r\n    }, [details, evoChain])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        return (\r\n            <>\r\n                <div className='details-pagina'>\r\n                <div id=\"pokemon-Details\">\r\n                    {details.sprites.other['official-artwork'].front_default === null ?\r\n                        <img className='pokemonImg'\r\n                             src={process.env.PUBLIC_URL + \"/Picture_Not_Yet_Available.png\"} alt=\"PNYA\" /> :\r\n                        <img className='pokemonImg'\r\n                             src={details.sprites.other['official-artwork'].front_default} alt=\"\" />\r\n                    }\r\n                    <h1 className='pokemonName'>{details.forms[0].name}</h1>\r\n                </div>\r\n                <div className='button-container'>\r\n                    {   checkFav(\"FavPokemon\", getId()) === true ?\r\n                        <button onClick={() => setFav(\"FavPokemon\", getId())} className='fav-Button-off'>Favourite</button> :\r\n                        <button onClick={() => setFav(\"FavPokemon\", getId())} className='fav-Button'>Favourite</button>\r\n                    }\r\n                    { getEvolutions(false, true) === 2 ?\r\n                        <button onClick={() => getEvolutions(false, false)} id=\"pEvo\" className='nex-Evo'>Next Evolution</button> :\r\n                        <button onClick={() => getEvolutions(false, false)} id=\"pEvo\" className='nex-Evo-off'>Next Evolution</button>\r\n                    }\r\n                    { getEvolutions(true, true) === 1 ?\r\n                        <button onClick={() => getEvolutions(true, false)} id=\"nEvo\" className='pre-Evo'>Previous Evolution</button> :\r\n                        <button onClick={() => getEvolutions(true, false)} id=\"nEvo\" className='pre-Evo-off'>Previous Evolution</button>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\favorite.js",["134"],"import { useEffect, useState, useContext } from 'react';\r\nimport getCookie from \"../scripts/cookies\"\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/authProvider\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nfunction Favorite() {\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [favPokemons, setFavPokemons] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const navigate = useNavigate()\r\n    const value = useContext(AuthContext)\r\n\r\n    function getFav() {\r\n        let tempArr = [];\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                tempArr.push(currentCookie);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n            }\r\n        }\r\n        return tempArr\r\n    }\r\n\r\n    function setFavPokemon() {\r\n        const arr = [];\r\n        const favList = getFav();\r\n        console.log(favList)\r\n        for(let i = 0; i < favList.length; i++) {\r\n            arr.push(pokemonNames[favList[i]])\r\n        }\r\n        setFavPokemons(arr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!value.isAuth.isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        if (pokemonNames.length !== 0) {\r\n            setFavPokemon();\r\n            setIsLoaded(true);\r\n        }\r\n    }, [pokemonNames])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        return (\r\n            <>\r\n                <h1 className=\"poketitel\">Pokelist:</h1>\r\n                <div>\r\n                    {favPokemons.map((p, index) =>\r\n                        <li id={index} key={index} className=\"pokemons\">\r\n                            <Link to={`../pokemondetails/${p.name}`} className='pokeNames'>{p.name}</Link>\r\n                        </li>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorite","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\scripts\\cookies.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\AuthProvider.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Home.js",[],["135","136"],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\LogoutForm.js",["137"],"import React, {useContext, useState,} from 'react';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const Logoutform = (props) => {\r\n    const data = useContext(AuthContext)\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <button className=\"logout-button\" onClick={() => {props.onFormSwitch('login'); navigate(\"/\"); data.logout() }}>Logout!</button>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\RegisterForm.js",["138"],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\Navbar.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\components\\LoginForm.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Search.js",["139","140"],"import { useState, useEffect, useContext } from 'react';\r\nimport Nav from '../components/Navbar';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nconst Search = () => {\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const navigate = useNavigate()\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    function getNames() {\r\n        const input = document.getElementById(\"searchbar\").value\r\n        const tempArr = [];\r\n        for (let i = 0; i < pokemonList.length; i++) {\r\n            document.getElementById(i).style.display = \"none\";\r\n            let pokemonName = pokemonList[i].name\r\n            if (pokemonName.includes(input)) {\r\n                tempArr.push(i)\r\n            }\r\n        }\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            document.getElementById(tempArr[i]).style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    async function setPokemonTypes(){\r\n        const typeValue = document.getElementById(\"types\").value;\r\n        let arr = []\r\n        if (typeValue === \"\") {\r\n            setPokemonList(pokemonNames)\r\n        } else {\r\n            const response = await fetch(API_URL + 'type/' + typeValue);\r\n            const data = await response.json()\r\n            const pokemonType = data.pokemon;\r\n            for (let i = 0; i < pokemonType.length; i++) {\r\n                arr.push(pokemonType[i].pokemon)\r\n            }\r\n            setPokemonList(arr)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                    setPokemonList(result.results)\r\n                }\r\n            )\r\n        fetch(API_URL + \"type?limit=18\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setTypes(result.results)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        if (pokemonNames.length !== 0) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [pokemonNames])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        console.log(types)\r\n        return (\r\n            <>\r\n                <div className='favorite-list'>\r\n                    <div className='searchContainer'>\r\n                        <input id=\"searchbar\" type=\"text\" placeholder='  Type hier je Pokemon...' onInput={() => getNames()}></input>\r\n                        <select id='types' onInput={() => setPokemonTypes()}>\r\n                            <option value=''>Select Type</option>\r\n                            {types.map((t, index) =>\r\n                                <option key={index} value={t.name}>{t.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    {pokemonList.map((p, index) =>\r\n                        <li id={index} key={index} className=\"pokemons\">\r\n                            <Link to={`../pokemondetails/${p.name}`} className='pokeNames'>{p.name}</Link>\r\n                        </li>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Search","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\List-Download.js",["141","142","143","144"],"import getCookie from \"../scripts/Cookies\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport function ListDownload() {\r\n\r\n    const [file, setFile] = useState()\r\n    const fileReader = new FileReader()\r\n    const {setFileData} = useState([])\r\n    const navigate = useNavigate()\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    function setFav(cvalue) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + (24 * 60 * 60 * 1000));\r\n        let expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = \"FavPokemon=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (file) {\r\n            fileReader.onload = function (event) {\r\n                const csvOutput = event.target.result;\r\n                // eslint-disable-next-line no-unused-expressions\r\n                {setFileData}(csvOutput)\r\n                setFav(csvOutput);\r\n            };\r\n            fileReader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    function downloadFile() {\r\n        let tempArr = [];\r\n        const favPokemons = getCookie(\"FavPokemon\");\r\n        const split = favPokemons.split(\",\");\r\n        for (let i = 0; i < split.length; i++) {\r\n            split[i] = split[i].replace(/\\[/g, \"\")\r\n        split[i] = split[i].replace(/\\]/g, \"\")\r\n            // eslint-disable-next-line\r\n            split[i] = split[i].replace(/\\\"/g, \"\")\r\n            split[i] = parseInt(split[i]);\r\n            tempArr.push(parseInt(split[i]))\r\n        }\r\n        let csv = \"\"\r\n        csv += tempArr.join(',');\r\n\r\n        let hiddenElement = document.createElement('a');\r\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\r\n        hiddenElement.target = '_blank'\r\n\r\n        hiddenElement.download = 'Fav Pokemon.csv';\r\n        hiddenElement.click();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='options'>\r\n        <div className='downloadCard'>\r\n            <p className='download-tekst'>\r\n                <span>Klaar met je lijst?</span> <span>Download hem Hier!</span></p>\r\n            <button onClick={() => downloadFile()} className='download-button'>Download</button>\r\n        </div>\r\n            <div className=\"uploadCard\">\r\n                <p className='upload-tekst'><span>Of upload hier</span> <span>een nieuwe lijst!</span></p>\r\n                <form className='uploadCard-buttons'>\r\n                    <input className='upload-button'\r\n                        type={\"file\"}\r\n                        id={\"csvFileInput\"}\r\n                        accept={\".csv\"}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <button className='submit-button'\r\n                        onClick={(e) => { handleOnSubmit(e); }}>Submit\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\PokemonDetails.js",["145"],"import {useContext, useEffect, useState} from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport getCookie from \"../scripts/Cookies\"\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nexport default function PokemonDetails() {\r\n    const [details, setDetails] = useState([]);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evoChain, setEvoChain] = useState([]);\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const {isAuth} = useContext(AuthContext)\r\n\r\n    const navigate = useNavigate();\r\n    const pokemonName = useParams().name\r\n\r\n    function getId() {\r\n        for(let i = 0; i < pokemonNames.length; i++) {\r\n            if(pokemonNames[i].name === pokemonName) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkFav(cname, cvalue) {\r\n        let same = false;\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let tempArr = [];\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                if (currentCookie === cvalue) {\r\n                    same = true;\r\n                }\r\n                tempArr.push(currentCookie);\r\n                tempArr.push(parseInt(cvalue));\r\n                cvalue = JSON.stringify(tempArr);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                let tempArr = [];\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    if (split[i] === cvalue) {\r\n                        same = true;\r\n                    }\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n            }\r\n            return same;\r\n        }\r\n    }\r\n\r\n    function setFav(cname, cvalue) {\r\n        console.log(cvalue)\r\n        const d = new Date();\r\n        let same = false;\r\n        let msplit = false;\r\n        let mindex;\r\n        cvalue = parseInt(cvalue);\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let tempArr = [];\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                if (currentCookie === cvalue) {\r\n                    same = true;\r\n                }\r\n                tempArr.push(currentCookie);\r\n                tempArr.push(parseInt(cvalue));\r\n                cvalue = JSON.stringify(tempArr);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                let tempArr = [];\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    if (split[i] === cvalue) {\r\n                        mindex = i;\r\n                        msplit = true;\r\n                    }\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n                split.push(parseInt(cvalue))\r\n                if (msplit) {\r\n                    split.splice(mindex, 1);\r\n                    split.pop();\r\n                }\r\n                cvalue = JSON.stringify(split);\r\n            }\r\n        }\r\n        if (same) {\r\n            if (cvalue.length > 3) {\r\n                cvalue = \"\";\r\n            } else {\r\n\r\n            }\r\n        }\r\n        d.setTime(d.getTime() + (1 * 24 * 60 * 60 * 30));\r\n        let expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    function getData(pname) {\r\n        fetch(API_URL + \"pokemon/\" + pname)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDetails(result)\r\n                    console.log(\"test\")\r\n                    fetch(result.species.url)\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            (result) => {\r\n                                setSpecies(result)\r\n                                try {\r\n                                    fetch(result.evolution_chain.url)\r\n                                        .then(res => res.json())\r\n                                        .then(\r\n                                            (result) => {\r\n                                                setEvoChain(result)\r\n                                            }\r\n                                        )\r\n                                } catch (e) {\r\n                                    setEvoChain(null)\r\n                                }\r\n                            }\r\n                        )\r\n                }\r\n            )\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                }\r\n            )\r\n    }\r\n\r\n    function getEvolutions(evo, onload) {\r\n        const arr = [];\r\n        let pIndex;\r\n        if (evoChain !== null) {\r\n            if (evoChain.chain.species.name !== undefined) {\r\n                arr.push(evoChain.chain.species.name)\r\n                if (evoChain.chain.evolves_to[0] !== undefined) {\r\n                    if (evoChain.chain.evolves_to[0].species.name !== undefined) {\r\n                        arr.push(evoChain.chain.evolves_to[0].species.name)\r\n                        if (evoChain.chain.evolves_to[0].evolves_to[0] !== undefined) {\r\n                            if (evoChain.chain.evolves_to[0].evolves_to[0].species.name !== undefined) {\r\n                                arr.push(evoChain.chain.evolves_to[0].evolves_to[0].species.name)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else{\r\n            return 0\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (pokemonName === arr[i]) {\r\n                pIndex = i;\r\n            }\r\n        }\r\n        if (evo) {\r\n            if (pIndex !== 0) {\r\n                if (!onload) {\r\n                    navigate(`../pokemondetails/${arr[pIndex - 1]}`)\r\n                    setIsLoaded(false)\r\n                    getData(arr[pIndex - 1]);\r\n                }\r\n                return 1\r\n            }\r\n            } else if (!evo) {\r\n                if (pIndex !== arr.length - 1) {\r\n                    if (!onload) {\r\n                        navigate(`../pokemondetails/${arr[pIndex + 1]}`)\r\n                        setIsLoaded(false)\r\n                        getData(arr[pIndex + 1]);\r\n                    }\r\n                    return 2\r\n                }\r\n            }\r\n        return 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        getData(pokemonName);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (evoChain !== null) {\r\n            if (details.length !== 0 && evoChain.length !== 0) {\r\n                setIsLoaded(true);\r\n            }\r\n        } else {\r\n            if (details.length !== 0) {\r\n                setIsLoaded(true);\r\n            }\r\n        }\r\n    }, [details, evoChain])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        return (\r\n            <>\r\n                <div className='details-pagina'>\r\n                <div id=\"pokemon-Details\">\r\n                    {details.sprites.other['official-artwork'].front_default === null ?\r\n                        <img className='pokemonImg'\r\n                             src={process.env.PUBLIC_URL + \"/Picture_Not_Yet_Available.png\"} alt=\"PNYA\" /> :\r\n                        <img className='pokemonImg'\r\n                             src={details.sprites.other['official-artwork'].front_default} alt=\"\" />\r\n                    }\r\n                    <h1 className='pokemonName'>{details.forms[0].name}</h1>\r\n                </div>\r\n                <div className='button-container'>\r\n                    {   checkFav(\"FavPokemon\", getId()) === true ?\r\n                        <button onClick={() => setFav(\"FavPokemon\", getId())} className='fav-Button-off'>Favourite</button> :\r\n                        <button onClick={() => setFav(\"FavPokemon\", getId())} className='fav-Button'>Favourite</button>\r\n                    }\r\n                    { getEvolutions(false, true) === 2 ?\r\n                        <button onClick={() => getEvolutions(false, false)} id=\"pEvo\" className='nex-Evo'>Next Evolution</button> :\r\n                        <button onClick={() => getEvolutions(false, false)} id=\"pEvo\" className='nex-Evo-off'>Next Evolution</button>\r\n                    }\r\n                    { getEvolutions(true, true) === 1 ?\r\n                        <button onClick={() => getEvolutions(true, false)} id=\"nEvo\" className='pre-Evo'>Previous Evolution</button> :\r\n                        <button onClick={() => getEvolutions(true, false)} id=\"nEvo\" className='pre-Evo-off'>Previous Evolution</button>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\pages\\Favorite.js",["146"],"import { useEffect, useState, useContext } from 'react';\r\nimport getCookie from \"../scripts/Cookies\"\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/\"\r\n\r\nfunction Favorite() {\r\n    const [pokemonNames, setPokemonNames] = useState([]);\r\n    const [favPokemons, setFavPokemons] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const navigate = useNavigate()\r\n    const value = useContext(AuthContext)\r\n\r\n    function getFav() {\r\n        let tempArr = [];\r\n        if (getCookie(\"FavPokemon\") !== \"\") {\r\n            if (getCookie(\"FavPokemon\").indexOf(\",\") < 0) {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                currentCookie = currentCookie.replace(/\\[/g, \"\");\r\n                currentCookie = currentCookie.replace(/\\]/g, \"\");\r\n                currentCookie = parseInt(currentCookie);\r\n                tempArr.push(currentCookie);\r\n            } else {\r\n                let currentCookie = getCookie(\"FavPokemon\");\r\n                const split = currentCookie.split(\",\");\r\n                for (let i = 0; i < split.length; i++) {\r\n                    split[i] = split[i].replace(/\\[/g, \"\")\r\n                    split[i] = split[i].replace(/\\]/g, \"\")\r\n                    // eslint-disable-next-line\r\n                    split[i] = split[i].replace(/\\\"/g, \"\")\r\n                    split[i] = parseInt(split[i]);\r\n                    tempArr.push(parseInt(split[i]))\r\n                }\r\n            }\r\n        }\r\n        return tempArr\r\n    }\r\n\r\n    function setFavPokemon() {\r\n        const arr = [];\r\n        const favList = getFav();\r\n        console.log(favList)\r\n        for(let i = 0; i < favList.length; i++) {\r\n            arr.push(pokemonNames[favList[i]])\r\n        }\r\n        setFavPokemons(arr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL + \"pokemon?limit=1000\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setPokemonNames(result.results)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!value.isAuth.isAuth) {\r\n            navigate(\"../\")\r\n        }\r\n        if (pokemonNames.length !== 0) {\r\n            setFavPokemon();\r\n            setIsLoaded(true);\r\n        }\r\n    }, [pokemonNames])\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    } if (isLoaded) {\r\n        return (\r\n            <>\r\n                <h1 className=\"poketitel\">Pokelist:</h1>\r\n                <div>\r\n                    {favPokemons.map((p, index) =>\r\n                        <li id={index} key={index} className=\"pokemons\">\r\n                            <Link to={`../pokemondetails/${p.name}`} className='pokeNames'>{p.name}</Link>\r\n                        </li>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorite","C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\scripts\\Cookies.js",[],"C:\\Users\\Matteus\\Desktop\\School codes\\React\\Huiswerk\\pokelist\\src\\context\\AuthContext.js",["147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":17,"column":10,"nodeType":"154","messageId":"155","endLine":17,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":20,"column":7,"nodeType":"154","messageId":"155","endLine":20,"endColumn":15},{"ruleId":"152","severity":1,"message":"157","line":20,"column":12,"nodeType":"154","messageId":"155","endLine":20,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":21,"column":11,"nodeType":"154","messageId":"155","endLine":21,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":34,"column":20,"nodeType":"154","messageId":"155","endLine":34,"endColumn":27},{"ruleId":"152","severity":1,"message":"160","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":11},{"ruleId":"161","severity":1,"message":"162","line":73,"column":8,"nodeType":"163","endLine":73,"endColumn":22,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"165","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"166","line":2,"column":19,"nodeType":"154","messageId":"155","endLine":2,"endColumn":28},{"ruleId":"152","severity":1,"message":"167","line":11,"column":11,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"168","line":12,"column":12,"nodeType":"154","messageId":"155","endLine":12,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":32,"column":17,"nodeType":"171","messageId":"172","endLine":32,"endColumn":30},{"ruleId":"152","severity":1,"message":"173","line":10,"column":12,"nodeType":"154","messageId":"155","endLine":10,"endColumn":19},{"ruleId":"161","severity":1,"message":"174","line":68,"column":8,"nodeType":"163","endLine":68,"endColumn":22,"suggestions":"175"},{"ruleId":"148","replacedBy":"176"},{"ruleId":"150","replacedBy":"177"},{"ruleId":"152","severity":1,"message":"165","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"178","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":20},{"ruleId":"152","severity":1,"message":"160","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":11},{"ruleId":"161","severity":1,"message":"162","line":73,"column":8,"nodeType":"163","endLine":73,"endColumn":22,"suggestions":"179"},{"ruleId":"152","severity":1,"message":"166","line":2,"column":19,"nodeType":"154","messageId":"155","endLine":2,"endColumn":28},{"ruleId":"152","severity":1,"message":"167","line":11,"column":11,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"168","line":12,"column":12,"nodeType":"154","messageId":"155","endLine":12,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":32,"column":17,"nodeType":"171","messageId":"172","endLine":32,"endColumn":30},{"ruleId":"152","severity":1,"message":"173","line":10,"column":12,"nodeType":"154","messageId":"155","endLine":10,"endColumn":19},{"ruleId":"161","severity":1,"message":"174","line":68,"column":8,"nodeType":"163","endLine":68,"endColumn":22,"suggestions":"180"},{"ruleId":"161","severity":1,"message":"181","line":38,"column":8,"nodeType":"163","endLine":38,"endColumn":10,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'AUTH_API' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'key' is assigned a value but never used.","'getData' is defined but never used.","'Nav' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["185"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'isAuth' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'species' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'setFavPokemon', and 'value.isAuth.isAuth'. Either include them or remove the dependency array.",["186"],["183"],["184"],"'useNavigate' is defined but never used.",["187"],["188"],"React Hook useEffect has missing dependencies: 'auth' and 'fetchUserData'. Either include them or remove the dependency array. You can also do a functional update 'setAuth(a => ...)' if you only need 'auth' in the 'setAuth' call.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"190","fix":"194"},{"desc":"192","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [isAuth, navigate, pokemonNames]",{"range":"198","text":"199"},"Update the dependencies array to be: [navigate, pokemonNames, setFavPokemon, value.isAuth.isAuth]",{"range":"200","text":"201"},{"range":"202","text":"199"},{"range":"203","text":"201"},"Update the dependencies array to be: [auth, fetchUserData]",{"range":"204","text":"205"},[2399,2413],"[isAuth, navigate, pokemonNames]",[2357,2371],"[navigate, pokemonNames, setFavPokemon, value.isAuth.isAuth]",[2398,2412],[2356,2370],[1147,1149],"[auth, fetchUserData]"]